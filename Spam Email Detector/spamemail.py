# -*- coding: utf-8 -*-
"""SpamEmail

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1aV7YHwCu8xW1Xcz82fnRc7R5k9i1NMf9
"""

# Step 1: Import libraries
import pandas as pd
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import MultinomialNB
from sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score

# Step 2: Load the dataset
# Upload the 'email.csv' file to Google Colab before running this cell
data = pd.read_csv('/content/emails.csv')

data.head()

# Step 3: Data Preprocessing
# No need to map labels since 'spam' column is already numeric (0 for ham, 1 for spam)
# Convert text data to numerical data using TF-IDF
vectorizer = TfidfVectorizer(stop_words='english')
X = vectorizer.fit_transform(data['text'])
y = data['spam']

# Step 4: Model Training
# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Train the model using Multinomial Naive Bayes
model = MultinomialNB()
model.fit(X_train, y_train)

# Step 5: Model Evaluation
# Make predictions
y_pred = model.predict(X_test)

# Calculate evaluation metrics
accuracy = accuracy_score(y_test, y_pred)
precision = precision_score(y_test, y_pred)
recall = recall_score(y_test, y_pred)
f1 = f1_score(y_test, y_pred)
# Display the results
print(f'Accuracy: {accuracy:.4f}')
print(f'Precision: {precision:.4f}')
print(f'Recall: {recall:.4f}')
print(f'F1 Score: {f1:.4f}')

# Step 6: Test the model with custom input
def predict_spam(message):
    message_vector = vectorizer.transform([message])
    prediction = model.predict(message_vector)
    return 'Spam' if prediction[0] == 1 else 'Ham'

# Example usage
test_message_spam = "Congratulations! You've won a $1000 Walmart gift card. Click here to claim your prize."
test_message_ham = "Hey, are you free for lunch today?"

print(f'Test message (Spam): {test_message_spam}')
print(f'Prediction: {predict_spam(test_message_spam)}')

print(f'\nTest message (Ham): {test_message_ham}')
print(f'Prediction: {predict_spam(test_message_ham)}')

